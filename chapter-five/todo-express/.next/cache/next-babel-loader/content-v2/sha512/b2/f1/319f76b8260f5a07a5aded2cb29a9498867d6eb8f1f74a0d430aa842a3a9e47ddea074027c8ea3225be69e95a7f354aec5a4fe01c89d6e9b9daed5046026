{"ast":null,"code":"'use strict';\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/toshiyamarukubo/study/git/learning-hands-on-node/chapter-five/todo-express/components/Todos.js\";\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport 'isomorphic-fetch';\nconst pages = {\n  index: {\n    title: 'all todo',\n    fetchQuery: ''\n  },\n  active: {\n    title: 'imcomplete todo',\n    fetchQuery: '?completed=false'\n  },\n  completed: {\n    title: 'completed todo',\n    fetchQuery: '?completed=true'\n  }\n};\nconst pageLinks = Object.keys(pages).map((page, index) => {\n  /*#__PURE__*/\n  _jsxDEV(Link, {\n    href: `/${page === 'index' ? '' : page}`,\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      style: {\n        marginRight: 10\n      },\n      children: pages[page].title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n});\nexport default function Todos(props) {\n  const {\n    title,\n    fetchQuery\n  } = pages[props.page];\n  const {\n    0: todos,\n    1: setTodos\n  } = useState([]);\n  useEffect(() => {\n    fetch(`/api/todos${fetchQuery}`).then(async res => {\n      res.ok ? setTodos(await res.json()) : alert(await res.text());\n    });\n  }, [props.page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(({\n        id,\n        title,\n        completed\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: completed ? {\n            textDecoration: 'line-through'\n          } : {},\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: pageLinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/toshiyamarukubo/study/git/learning-hands-on-node/chapter-five/todo-express/components/Todos.js"],"names":["useEffect","useState","Link","Head","pages","index","title","fetchQuery","active","completed","pageLinks","Object","keys","map","page","marginRight","Todos","props","todos","setTodos","fetch","then","res","ok","json","alert","text","id","textDecoration"],"mappings":"AAAA;;;;;AACA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,kBAAP;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,UADF;AAELC,IAAAA,UAAU,EAAE;AAFP,GADK;AAKZC,EAAAA,MAAM,EAAE;AACNF,IAAAA,KAAK,EAAE,iBADD;AAENC,IAAAA,UAAU,EAAE;AAFN,GALI;AASZE,EAAAA,SAAS,EAAE;AACTH,IAAAA,KAAK,EAAE,gBADE;AAETC,IAAAA,UAAU,EAAE;AAFH;AATC,CAAd;AAeA,MAAMG,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,GAAnB,CAAuB,CAACC,IAAD,EAAOT,KAAP,KAAiB;AACxD;AAAA,UAAC,IAAD;AAAM,IAAA,IAAI,EAAG,IAAGS,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwBA,IAAK,EAA7C;AAAA,2BACE;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,WAAW,EAAE;AAAd,OAAV;AAAA,gBAA8BX,KAAK,CAACU,IAAD,CAAL,CAAYR;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF,KAAqDD,KAArD;AAAA;AAAA;AAAA;AAAA;AAGD,CAJiB,CAAlB;AAMA,eAAe,SAASW,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM;AAACX,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAsBH,KAAK,CAACa,KAAK,CAACH,IAAP,CAAjC;AAEA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,KAAK,CAAE,aAAYb,UAAW,EAAzB,CAAL,CACGc,IADH,CACQ,MAAOC,GAAP,IAAe;AACnBA,MAAAA,GAAG,CAACC,EAAJ,GAASJ,QAAQ,CAAC,MAAMG,GAAG,CAACE,IAAJ,EAAP,CAAjB,GAAsCC,KAAK,CAAC,MAAMH,GAAG,CAACI,IAAJ,EAAP,CAA3C;AACD,KAHH;AAID,GALQ,EAKN,CAACT,KAAK,CAACH,IAAP,CALM,CAAT;AAMA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAQR;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gBAEIY,KAAK,CAACL,GAAN,CAAU,CAAC;AAACc,QAAAA,EAAD;AAAKrB,QAAAA,KAAL;AAAYG,QAAAA;AAAZ,OAAD,kBACR;AAAA,+BACE;AAAM,UAAA,KAAK,EAAEA,SAAS,GAAG;AAACmB,YAAAA,cAAc,EAAE;AAAjB,WAAH,GAAsC,EAA5D;AAAA,oBACGtB;AADH;AAAA;AAAA;AAAA;AAAA;AADF,SAASqB,EAAT;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YALF,eAgBE;AAAA,gBAAMjB;AAAN;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AAoBD","sourcesContent":["'use strict';\nimport {useEffect, useState} from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport 'isomorphic-fetch';\n\nconst pages = {\n  index: {\n    title: 'all todo',\n    fetchQuery: ''\n  },\n  active: {\n    title: 'imcomplete todo',\n    fetchQuery: '?completed=false'\n  },\n  completed: {\n    title: 'completed todo',\n    fetchQuery: '?completed=true'\n  }\n};\n\nconst pageLinks = Object.keys(pages).map((page, index) => {\n  <Link href={`/${page === 'index' ? '' : page}`} key={index}>\n    <a style={{marginRight: 10}}>{pages[page].title}</a>\n  </Link>\n});\n\nexport default function Todos(props) {\n  const {title, fetchQuery} = pages[props.page];\n\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetch(`/api/todos${fetchQuery}`)\n      .then(async (res) => {\n        res.ok ? setTodos(await res.json()) : alert(await res.text());\n      });\n  }, [props.page]);\n  return (\n    <>\n      <Head>\n        <title>{title}</title>\n      </Head>\n      <h1>{title}</h1>\n      <ul>\n        {\n          todos.map(({id, title, completed}) => \n            <li key={id}>\n              <span style={completed ? {textDecoration: 'line-through'} : {}}>\n                {title}\n              </span>\n            </li>\n          )\n        }\n      </ul>\n      <div>{pageLinks}</div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}